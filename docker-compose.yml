version: '3'
services:
  adguardhome:
    depends_on:
      - nginx
    image: adguard/adguardhome
    ports:
      - 53:53
      - 53:53/udp
      - 853:853
    restart: always
    volumes:
      - ./adguardhome/work:/opt/adguardhome/work
      - ./adguardhome/conf:/opt/adguardhome/conf
  alist:
    depends_on:
      - nginx
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
      UMASK: ${UMASK}
    image: xhofe/alist
    restart: always
    volumes:
      - ./alist/data:/opt/alist/data
  homeassistant:
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
    image: linuxserver/homeassistant
    network_mode: host
    restart: always
    volumes:
      - ./homeassistant/config:/config
      - /run/dbus:/run/dbus:ro
  homebridge:
    environment:
      TZ: '${TZ}'
      PUID: 0
      PGID: 0
      HOMEBRIDGE_CONFIG_UI: 1
      HOMEBRIDGE_CONFIG_UI_PORT: 8581
    image: oznu/homebridge
    network_mode: host
    restart: always
    volumes:
      - ./homebridge/data:/homebridge
  mariadb:
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    image: linuxserver/mariadb
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./mariadb/config:/config
  mitmproxy:
    command: mitmdump
    environment:
      TZ: '${TZ}'
    image: mitmproxy/mitmproxy
    ports:
      - 58080:58080
      - 58081:8081
      - 51080:1080
      - 51080:1080/udp
    restart: always
    volumes:
      - ~/.mitmproxy:/home/mitmproxy/.mitmproxy
  nginx:
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
    image: linuxserver/nginx
    ports:
      - 60443:60443
    restart: always
    volumes:
      - ./nginx/config:/config
      - /root/.acme.sh:/.acme.sh
  node-red:
    environment:
      TZ: '${TZ}'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    image: nodered/node-red
    restart: always
    volumes:
      - ./node-red/data:/data
  portainer:
    command: -H unix:///var/run/docker.sock
    depends_on:
      - nginx
    image: portainer/portainer-ce
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
  qinglong:
    environment:
      TZ: '${TZ}'
    depends_on:
      - nginx
    image: whyour/qinglong
    restart: always
    volumes:
      - ./qinglong/data:/ql/data
  scrypted:
    environment:
      TZ: '${TZ}'
    image: koush/scrypted
    network_mode: host
    restart: always
    volumes:
      - ./scrypted/data:/server/volume
  transmission:
    depends_on:
      - nginx
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
      TRANSMISSION_WEB_HOME: '${TRANSMISSION_WEB_HOME}'
      USER: '${TRANSMISSION_USER}'
      PASS: '${TRANSMISSION_PASS}'
    image: ghcr.io/linuxserver/transmission
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: always
    volumes:
      - ./transmission/config:/config
      - ./transmission/downloads:/downloads
      - ./transmission/watch:/watch
  xiaoya:
    image: xiaoyaliu/alist
    restart: always
    volumes:
      - ./xiaoya/data:/data
  watchtower:
    environment:
      WATCHTOWER_CLEANUP: 'true'
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

