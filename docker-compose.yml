version: '3'
services:
  adguardhome:
    depends_on:
      - nginx
    image: adguard/adguardhome:latest
    ports:
      - 53:53
      - 53:53/udp
      - 853:853
    restart: always
    volumes:
      - ./adguardhome/work:/opt/adguardhome/work
      - ./adguardhome/conf:/opt/adguardhome/conf
  aliyundrive-webdav:
    environment:
      REFRESH_TOKEN: '${REFRESH_TOKEN}'
      WEBDAV_AUTH_USER: '${WEBDAV_AUTH_USER}'
      WEBDAV_AUTH_PASSWORD: '${WEBDAV_AUTH_PASSWORD}'
    depends_on:
      - nginx
    image: messense/aliyundrive-webdav
    restart: always
    volumes:
      - ./aliyundrive-webdav/aliyundrive-webdav:/etc/aliyundrive-webdav
  homeassistant:
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
    image: lscr.io/linuxserver/homeassistant
    network_mode: host
    restart: always
    volumes:
      - ./homeassistant/config:/config
  homebridge:
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
      HOMEBRIDGE_CONFIG_UI: 1
      HOMEBRIDGE_CONFIG_UI_PORT: 8581
    image: oznu/homebridge
    network_mode: host
    restart: always
    volumes:
      - ./homebridge/config:/homebridge
  nginx:
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
    image: lscr.io/linuxserver/nginx
    ports:
      - 8443:8443
    restart: always
    volumes:
      - ./nginx/config:/config
      - /root/.acme.sh:/.acme.sh
  node-red:
    environment:
      TZ: '${TZ}'
    image: nodered/node-red
    network_mode: host
    restart: always
    volumes:
      - ./node-red/data:/data
  portainer:
    command: -H unix:///var/run/docker.sock
    depends_on:
      - nginx
    image: portainer/portainer-ce
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
  qinglong:
    depends_on:
      - nginx
    image: shufflewzc/qinglong
    restart: always
    volumes:
      - ./qinglong/config:/ql/config
      - ./qinglong/log:/ql/log
      - ./qinglong/db:/ql/db
      - ./qinglong/repo:/ql/repo
      - ./qinglong/raw:/ql/raw
      - ./qinglong/scripts:/ql/scripts
      - ./qinglong/jbot:/ql/jbot
      - ./qinglong/ninja:/ql/ninja
  transmission:
    depends_on:
      - nginx
    environment:
      TZ: '${TZ}'
      PUID: ${PUID}
      PGID: ${PGID}
      TRANSMISSION_WEB_HOME: '${TRANSMISSION_WEB_HOME}'
      USER: '${TRANSMISSION_USER}'
      PASS: '${TRANSMISSION_PASS}'
    image: ghcr.io/linuxserver/transmission
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: always
    volumes:
      - ./transmission/config:/config
      - ./transmission/downloads:/downloads
      - ./transmission/watch:/watch
  watchtower:
    environment:
      WATCHTOWER_CLEANUP: 'true'
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

